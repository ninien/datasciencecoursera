prwd()
getwd()
setwd(/Users/laurianewales/datasciencecoursera)
setwd("/Users/laurianewales/datasciencecoursera")
getwd()
add2 <- function(x, y) {
x + y
## no need to return because R automatically returns the
## result of the last expression
}
add2(2,4)
above <- function(n,x) {
use <- x > n
x[use]
}
above(6, x <- 1:20)
above <- function(x, n) {
use <- x > n
x[use]
}
above(x <- 1:20, 18)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x <- 1:20)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[ ,i])
}
means
}
airquality <- read.table("hw1_data.csv", header = TRUE)
airquality <- read.csv("hw1_data.csv", header = TRUE)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[ ,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[ ,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
library(swirl)
swirl()
setwd(old.dir)
unlink(testdir, recursive = TRUE)
unlink("testdir", recursive = TRUE)
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, number = 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
?sd
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[-1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("How are you doing?")
bye()
library(swirl)
rm(list=ls())
swirl()
submit()
mad_libs("Knox College", "activist", "giant squirell statue")
play()
mad_libs(place = "Knox College", adjective = "activist", noun = "giant squirell statue")
nxt()
submit()
"I" %p% "love" %p% "R!"
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
?head
head(plants, n = 10L)
head(plants)
head(plants, n = 10L)
head(plants, n = 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data) <- cnames
my_data
rm(list=ls())
?rm
printcwd()
?cwd
??cwd
?data.read
?read.data
read.data
data.read
?file.read
?read.file
getwd()
?subset
?list.files
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:332)
filesInDir
directory <- "specdata"
filesInDir <- list.files(directory, pattern = "*.csv")
filesInDir
id = 3:33
filesNeeded <- filesInDir[id]
filesNeeded
rawData <- read.csv(filesNeeded)
?read.csv
filesNeeded <- paste("/Users/laurianewales/datasciencecoursera/", directory, "/", filesNeeded, sep = "")
filesNeeded
rawData <- read.csv(filesNeeded, header = TRUE)
?vector
my_vector <- vector(length = id)
my_vector <- vector(length = length(id))
my_vector
my_vector <- vector("numeric", length(id))
my_vector
pollutant = "something"
if pollutant == "sulfate" {
polCol <- 2
} else if pollutant == "nitrate"{
polCol <- 3
} else {
return("wrong pollutant name")
}
if (pollutant == "sulfate") {
polCol <- 2
} else if (pollutant == "nitrate"){
polCol <- 3
} else {
return("wrong pollutant name")
}
if (identical(pollutant, "sulfate")) {
polCol <- 2
} else if (identical(pollutant, "nitrate")) {
polCol <- 3
} else {
return("wrong pollutant name")
}
if (identical(pollutant, "sulfate")) {
polCol <- 2
} else if (identical(pollutant, "nitrate")) {
polCol <- 3
} else {
return("wrong pollutant name")
}
if (identical(pollutant, "sulfate")) {
polCol <- 2
} else if (identical(pollutant, "nitrate")) {
polCol <- 3
} else {
"wrong pollutant name"
}
filesNeeded
try <- read.csv(filesNeeded[1], header = TRUE)
head(try)
clear try
try(2, )
try[2, ]
try[ ,2]
try2 <- mean(try[ ,polCol])
try2
?mean
try2 <- mean(try[ ,polCol], na.rm = TRUE)
try2
polCol
rm(list = ls())
source('~/datasciencecoursera/pollutantmean.R')
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "something", 1:10)
source('~/datasciencecoursera/pollutantmean.R')
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "something", 1:10)
?matrix
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/001.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/002.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/003.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/004.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/005.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/006.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/007.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/008.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/009.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/010.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/020.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/030.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/040.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/050.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/060.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/070.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/080.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/090.csv", header = TRUE)
try <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/100.csv", header = TRUE)
?data.frame
data <- read.csv("/Users/laurianewales/datasciencecoursera/specdata/100.csv", header = TRUE)
polCol = 2
dataNeeded <- data[ ,polCol]
dataNeeded
dataKeep <- c(3, 4, 4)
dataKeep <- c(dataKeep, dataNeeded)
?vector
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
?mean
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
directory = "specdata"
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
filesNeeded
directory <- "specdata"
pollutant = "sulfate"
id <- 1:10
filesInDir <- list.files(directory, pattern = "*.csv")
filesNeeded <- filesInDir[id]
filesNeeded
filesNeeded <- paste("/Users/laurianewales/datasciencecoursera/", directory, "/", filesNeeded, sep = "")
filesNeeded
dataKeep <- vector("numeric")
source('~/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
source('~/datasciencecoursera/pollutantmean.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
source("submitscript1.R")
submit()
submit()
submit()
submit()
?is.complete
?complete
?complete.cases
?data.frame
?vector
id <- 30:25
cNames <- vector("charater", length(id))
?complete.cases
Test <- c(3, 4, 6, NA, NA, 2)
dim(Test) <- c(3,2)
Test
Labels <- c("Col1", "Col2")
Test2 <- data.frame(Test)
colnames(Test2) <- Labels
Test2
Test <- c(3, NA, 6, NA, NA, 2)
dim(Test) <- c(3,2)
Test2 <- data.frame(Test)
colnames(Test2) <- Labels
Test2
complete.cases(Test2)
New <- Test2[complete.cases(Test2)]
New <- Test2[complete.cases(Test2), ]
New
length(New)
size(New)
nrows(New)
nrow(New)
source('~/datasciencecoursera/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("submitscript1.R")
submit()
submit()
submit()
?corr
?cor
dataComplete <- vector("numeric")
dataComplete <- c(4, 5, 7)
dataComplete <- vector("numeric")
source('~/datasciencecoursera/corr.R')
source('~/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
cr
source('~/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
source('~/datasciencecoursera/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("submitscript1.R")
submit()
submit()
submit()
thing <- c(3, 4, 7)
thing <- c(10, 11)
library(datasets)
data(iris)
?iris
col1 <- matrix(iris[ ,1])
col1
col5 <- matrix(iris[, 5])
?count
col5
mean(col1[101:150])
View(col5)
View(col5)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
strint(tapply)
string(tapply)
str(tapply)
?tapply
tapply(mtcars$mpg, mtcars$cyl, mean)
s <- tapply(mtcars$mpg, mtcars$cyl, mean)
s
s[1] - s[3]
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
s <- with(mtcars, tapply(mpg, cyl, mean))
s <- with(mtcars, tapply(hp, cyl, mean))
s
abs(s[2, 1] - s[2, 3])
abs(s[1] - s[3])
library(datasets)
data(iris)
iris
clear
??cleear console
??clear
